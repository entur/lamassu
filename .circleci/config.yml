version: 2.1

aliases:
  - &jfrog-login
      name: Rename jfrog environment variable for maven setting.xml
      command: |
        echo "export JFROG_USER=$ARTIFACTORY_USER"  >> $BASH_ENV
        echo "export JFROG_PASS=$ARTIFACTORY_PASSWORD"  >> $BASH_ENV
  - &post_build
    name: Trigger downstream builds
    command: |
      wget https://raw.githubusercontent.com/entur/circleci-toolbox-image-java11/master/tools/trigger_build_v2.sh -O .circleci/trigger_build_v2.sh
      chmod +x .circleci/trigger_build_v2.sh
      echo 'export CIRCLE_SHA1="$CIRCLE_SHA1"' >> $BASH_ENV
      echo 'export CIRCLE_PROJECT_REPONAME="$CIRCLE_PROJECT_REPONAME"' >> $BASH_ENV
       .circleci/trigger_build_v2.sh "entur/lamassu-deployment-config.git" "master" "$(git log -1 --pretty=%B)"
  - &sonar-scan
    name: Sonar scan
    command: |
      mvn -s .circleci/settings.xml \
        org.jacoco:jacoco-maven-plugin:prepare-agent verify \
        org.jacoco:jacoco-maven-plugin:report sonar:sonar \
        -P prettierSkip \
        -Dmaven.main.skip \
        -DskipTests \
        -Dsonar.projectKey=entur_${CIRCLE_PROJECT_REPONAME} \
        -Dsonar.organization=${SONAR_ORG} \
        -Dsonar.projectName=${CIRCLE_PROJECT_REPONAME} \
        -Dsonar.host.url=https://sonarcloud.io \
        -Dsonar.login=${ENTUR_SONAR_PASSWORD}
jobs:
  test:
    docker:
      - image: cimg/openjdk:17.0.9-node
        auth:
          username: $DOCKERHUB_LOGIN
          password: $DOCKERHUB_PASSWORD
    environment:
      MAVEN_OPTS: -Xmx3G
    steps:
      - checkout
      - restore_cache:
          keys:
            - dep-cache-v2-{{ checksum "pom.xml" }}
            - dep-cache-v2-
      - run:
          name: Download Maven settings
          command: wget https://raw.githubusercontent.com/entur/circleci-toolbox-image-java11/master/tools/m2/settings.xml -O .circleci/settings.xml
      - run: *jfrog-login
      - run:
          name: Refresh cache
          command: mvn org.apache.maven.plugins:maven-dependency-plugin:3.1.0:go-offline -s .circleci/settings.xml
      - save_cache:
          paths:
            - ~/.m2
          key: dep-cache-v2-{{ checksum "pom.xml" }}
      # Cannot use -o because of snapshot dependencies.
      - run:
          name: Run Maven verify
          command: mvn verify -s .circleci/settings.xml -Dprettier.nodePath=node -Dprettier.npmPath=npm
      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/junit/ \;
            find . -type f -regex ".*/target/surefire-reports/.*dumpstream" -exec cp {} ~/junit/ \;
            find . -type f -regex ".*/target/surefire-reports/.*log" -exec cp {} ~/junit/ \;
          when: always
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ~/junit
      - persist_to_workspace:
          root: ~/project
          paths:
            - target
            - .circleci
  build:
    docker:
      - image: cimg/openjdk:17.0.9-node
        auth:
          username: $DOCKERHUB_LOGIN
          password: $DOCKERHUB_PASSWORD
    environment:
      MAVEN_OPTS: -Xmx3G
    steps:
      - checkout
      - restore_cache:
          keys:
            - dep-cache-v2-{{ checksum "pom.xml" }}
            - dep-cache-v2-
      - run:
          name: Download Maven settings
          command: wget https://raw.githubusercontent.com/entur/circleci-toolbox-image-java11/master/tools/m2/settings.xml -O .circleci/settings.xml
      - run: *jfrog-login
      - run:
          name: Refresh cache
          command: mvn org.apache.maven.plugins:maven-dependency-plugin:3.1.0:go-offline -s .circleci/settings.xml
      - save_cache:
          paths:
            - ~/.m2
          key: dep-cache-v2-{{ checksum "pom.xml" }}
      # Cannot use -o because of snapshot dependencies.
      - run: mvn deploy -s .circleci/settings.xml -P prettierSkip -DskipTests
      - run: *post_build

workflows:
  version: 2.1
  release:
    jobs:
      - test:
          name: test-release
          context: global
      - build:
          name: build-release
          context: global
          filters:
            branches:
              only:
                - master
          requires:
            - test-release
